[tool.poetry]
name = "opsiconfd"
version = "4.3.0.83"
description = "opsi configuration service"
homepage = "https://www.opsi.org"
license = "AGPL-3.0"
maintainers = ["uib GmbH <info@uib.de>"]
authors = ["uib GmbH <info@uib.de>"]
include = [
    "run-opsiconfd",
    "opsiconfd_data/**/*"
]

[[tool.poetry.source]]
name = "uibpypi"
url = "https://pypi.uib.gmbh/simple"
priority = "primary"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
# Get the latest python-opsi from branch 4.2
#python-opsi = { git = "git@gitlab.uib.local:uib/python-opsi.git", branch = "v4.2" }
#python-opsi = {path = "python-opsi", develop = true}
python-opsi = ">=4.3,<4.4"
python-opsi-common = ">=4.3,<4.4"
#python-opsi-common = {path = "python-opsi-common", develop = true}
aiofiles = "^23.1"
aiohttp = "^3.7"
aiologger = "^0.7"
aiozeroconf = "^0.1"
configargparse = "^1.4"
configupdater = "^3.1"
distro = "^1.5"
dnspython = "^2.1"
fastapi = "^0.100"
greenlet = "^2.0"
hiredis = "^2.2"
httpx = "^0.24"
itsdangerous = "^2.0"
msgspec = "^0.17"
mysqlclient = ">=2.0,<2.2"
objgraph = "^3.5"
pydantic = ">=1.0,<2.0"
pympler = "^1.0"
pyotp = "^2.8.0"
python-magic = "^0.4"
python-multipart = "^0.0"
qrcode = "^7.4.2"
redis = "^4.2"
rich = "^13.0"
uvicorn = "^0.23"
uvloop = "^0.17"
websockets = "^11.0"
wsgidav = "^4.0"
yappi = "^1.4"

[tool.poetry.group.dev.dependencies]
hypothesis = "^6.32"
idna = "^3.3"
isort = "^5.10"
mock = "^5.0"
mypy = "^1.4"
pyinstaller = "^5.5"
pylint = "^2.12"
pylint-pydantic = "^0.1.4"
pytest = "^7.1"
pytest-asyncio = "^0.21"
pytest-cov = "^4.0"
schemathesis = "^3.14"
tan = "^23.3"
types-certifi = "^2021.10"
types-psutil = "^5.8"
types-pyopenssl = "^23.0"
types-redis = "^4.1"
types-requests = "^2.27"
ruff = "^0.0"
pydevd = "^2.9.5"
wrapt = "^1.14.1"
dill = "^0.3.6"
bandit = "^1.7.4"

[tool.poetry.scripts]
opsiconfd = "opsiconfd.__main__:main"

[tool.black]
line-length = 140
target-version = ['py310']
use-tabs = true

[tool.isort]
profile = "black"
indent = "\t"

[tool.ruff]
line-length = 140
# As long as pylint is in use:
# Ignore F401 (imported but unused)
# Ignore E402 (Module level import not at top of file)
# Ignore F811 (Redefinition of unused)
ignore = ["F401", "E402", "F811"]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    # isort
    "I"
]

[tool.ruff.per-file-ignores]
"opsiconfd/check.py" = ["E101","E501"]

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
follow_imports = "silent"

[tool.pylint.MASTER]
load-plugins = "pylint_pydantic"

[tool.pylint.BASIC]
no-docstring-rgx = ".*"

[tool.pylint.FORMAT]
indent-string = "\t"
max-line-length = 140

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

