image: python:3.7-stretch

stages:
  - test
  - build
  - publish

.install_tools: &install_tools |
  export DEBIAN_FRONTEND=noninteractive
  apt update
  apt -y install debhelper osc
  pip3 install --trusted-host pypi.uib.gmbh --index-url http://pypi.uib.gmbh:8080/simple opsi-dev-tools
  pip3 install poetry

test:perftest:
  when: manual
  image: ubuntu:focal
  services:
    - mysql:latest
    - name: redislabs/redistimeseries:latest
      alias: redis
  variables:
    MYSQL_ROOT_PASSWORD: "opsi"
    MYSQL_DATABASE: "opsi"
    MYSQL_USER: "opsi"
    MYSQL_PASSWORD: "opsi"
  stage: test
  script: |
    # Install debian packages
    export DEBIAN_FRONTEND=noninteractive
    apt update
    apt -y install wget git python3-pip python3-venv libmysqlclient-dev mysql-client iproute2 net-tools iputils-ping
    # Need redis-timeseries 1.2.8 which is not yet available, installing patched version from obs
    wget http://obs.uib.gmbh:82/home:/uibmz:/opsi:/4.2:/experimental/xUbuntu_20.04/amd64/redis-server_6.0.4-1_amd64.deb
    wget http://obs.uib.gmbh:82/home:/uibmz:/opsi:/4.2:/experimental/xUbuntu_20.04/amd64/redis-tools_6.0.4-1_amd64.deb
    wget http://obs.uib.gmbh:82/home:/uibmz:/opsi:/4.2:/experimental/xUbuntu_20.04/amd64/redis-timeseries_1.2.6-1_amd64.deb
    wget http://obs.uib.gmbh:82/home:/uibmz:/opsi:/4.2:/experimental/xUbuntu_20.04/amd64/liblzf1_3.6-2_amd64.deb
    dpkg -i *.deb || apt -y -f install
    # Deactivate mysql strict mode
    mysql --host=mysql --user=root --password=${MYSQL_ROOT_PASSWORD} -e "SET GLOBAL sql_mode = 'NO_ENGINE_SUBSTITUTION';"
    #mysql --host=mysql --user=root --password=${MYSQL_ROOT_PASSWORD} -e "CREATE USER 'opsi'@'%' IDENTIFIED BY 'opsi';"
    mysql --host=mysql --user=root --password=${MYSQL_ROOT_PASSWORD} -e "GRANT ALL ON *.* TO 'opsi'@'%';"
    # Get config files from opsi-server package
    [ -e /etc/opsi ] && rm -r /etc/opsi
    [ -e ../opsi-server ] && rm -r ../opsi-server
    url=$(git remote -v | grep fetch | cut -f2 | sed s'#/opsiconfd.git.*#/opsi-server.git#')
    #branch=$(git rev-parse --abbrev-ref HEAD)
    branch=master
    GIT_TERMINAL_PROMPT=0 git clone --branch $branch $url ../opsi-server
    cp -a ../opsi-server/opsi-server_data/etc /etc/opsi
    # Set mysql address in config
    sed -i "s/127.0.0.1/mysql/" /etc/opsi/backends/mysql.conf
    # Use mysql backend only
    echo ".* : mysql" > /etc/opsi/backendManager/dispatch.conf
    # Configure opsiconfd
    mkdir -p /var/lib/opsi/repository /var/lib/opsi/depot
    #echo "redis-internal-url = redis://redis" > /etc/opsi/opsiconfd.conf
    echo "log-level-stderr = 4" >> /etc/opsi/opsiconfd.conf
    echo "log-level-file = 0" >> /etc/opsi/opsiconfd.conf
    # Installing opsi test modules file
    echo "${OPSI_TEST_MODULES}" > /etc/opsi/modules
    # TODO: restore some backend
    # Install poetry
    pip3 install poetry
    poetry install
    poetry run opsiconfd --setup --log-level-stderr=5
    # Create adminuser used with opsiconfd-perftest.py
    useradd adminuser
    echo "adminuser:adminuser" | chpasswd
    adduser adminuser opsiadmin  
    redis-server /etc/redis/redis.conf &
    sleep 5
    poetry run opsiconfd &
    sleep 5
    poetry run ./perftest/opsiconfd-perftest.py -l perftest/tests/test_jsonrpc_authenticated.json -w /tmp/perftest-result
    [ $(grep errors= /tmp/perftest-result | cut -d '=' -f2) -gt 0 ] && ( echo 'Errors in perftest' >&2 && exit 1 )
    [ $(grep avg_requests_per_second= /tmp/perftest-result | cut -d '=' -f2 | cut -d'.' -f 1) -ge 200 ] || ( echo 'Requests per second < 200' >&2 && exit 1 )

build:linux-pyinstaller:
  stage: build
  script:
    - *install_tools
    - poetry install
    - poetry run opsi-dev-tool -l trace --pyinstaller-poetry-build
    - mv opsiconfd opsiconfd.src
    - mv dist/opsiconfd .
    # Check if binary is working
    - ./opsiconfd/opsiconfd -c opsiconfd_data/opsiconfd.conf --version
  artifacts:
    name: 'opsiconfd-linux-pyinstaller'
    paths:
      - opsiconfd
    expire_in: 2 day

package:obs_int:
  stage: publish
  dependencies:
    - build:linux-pyinstaller
  script:
    - *install_tools
    - python3 -m opsidevtools -l info --obs-update-package https://obs.uib.gmbh home:uibmz:opsi:4.2:experimental
  only:
    - tags
 
package:obs_ext:
  stage: publish
  dependencies:
    - build:linux-pyinstaller
  script:
    - *install_tools
    - python3 -m opsidevtools -l info --obs-update-package https://build.opensuse.org home:uibmz:opsi:4.2:experimental
  only:
    - tags
