project:
  licenses:
    - license: AGPL-3.0
      header: |
        opsiconfd is part of the desktop management solution opsi http://www.opsi.org
        Copyright (c) 2023-{year} uib GmbH <info@uib.de>
        All rights reserved.
        License: {license}

git:
  hooks:
    pre-push: |
      echo "Running pylint..."
      poetry run pylint --disable=R,fixme,E0012 opsiconfd tests
      echo "Running ruff..."
      poetry run ruff opsiconfd tests
      echo "Running mypy..."
      poetry run mypy opsiconfd tests

pyinstaller-poetry:
  one_file: no
  strip: yes
  hidden_imports:
    all:
      - ipaddress
      - colorsys
      - uvicorn.workers
      - uvicorn.loops
      - uvicorn.loops.auto
      - uvicorn.loops.uvloop
      - uvicorn.lifespan
      - uvicorn.lifespan.on
      - uvicorn.protocols
      - uvicorn.protocols.http
      - uvicorn.protocols.http.h11_impl
      - uvicorn.protocols.http.httptools_impl
      - uvicorn.protocols.websockets
      - uvicorn.protocols.websockets.auto
      - pydantic.color
      - pydantic.validators
      - pydantic.datetime_parse
      # UserWarning: You do not have a working installation of the service_identity module: 'No module named 'service_identity''.
      # Please install it from <https://pypi.python.org/pypi/service_identity> and make sure all of its dependencies are satisfied.
      # Without the service_identity module, Twisted can perform only rudimentary TLS client hostname verification.
      # Many valid certificate/hostname mappings may be rejected.
      - service_identity
      - OPSI.Util.WIM
      - opsiconfd.application.utils
      - opsiconfd.rest
  before_script: |
    find .venv -iname "*linux-gnu.so" | grep pydantic | xargs rm -v 2>/dev/null || true
  scripts:
    - script: run-opsiconfd
      binaries:
        - opsiconfd
  data_files:
    - src: opsiconfd_data/**/*
      dst: opsiconfd_data
  dirname: opsiconfd
  after_script: |
    find dist/opsiconfd -iname "*.c" -delete
    find dist/opsiconfd -iname "*.h" -delete
    find dist/opsiconfd -iname "*.so" -exec chmod -x "{}" \;
    find dist/opsiconfd -iname "*.so.*" -exec chmod -x "{}" \;

package:
  name: opsiconfd
  type: binary
  systemd: yes
  depends:
    - librsync | librsync2 | librsync1
    - pigz
  source_script: |
    pyi_src="${SRC}"
    if [ -e "${SRC}/dist/opsiconfd/opsiconfd" ]; then pyi_src="${SRC}/dist"; fi
    mkdir -p ${DST}/rootfs/etc/opsi
    mkdir -p ${DST}/rootfs/usr/bin
    mkdir -p ${DST}/rootfs/usr/lib
    mkdir -p ${DST}/rootfs/usr/share/opsiconfd
    mkdir -p ${DST}/rootfs/var/lib/opsi/depot
    mkdir -p ${DST}/rootfs/var/lib/opsi/ntfs-images
    mkdir -p ${DST}/rootfs/var/lib/opsi/public
    mkdir -p ${DST}/rootfs/var/lib/opsi/repository
    mkdir -p ${DST}/rootfs/var/lib/opsi/workbench
    mkdir -p ${DST}/rootfs/var/log/opsi/bootimage
    mkdir -p ${DST}/rootfs/var/log/opsi/clientconnect
    mkdir -p ${DST}/rootfs/var/log/opsi/instlog
    mkdir -p ${DST}/rootfs/var/log/opsi/opsiconfd
    mkdir -p ${DST}/rootfs/var/log/opsi/userlogin

    mkdir -p ${DST}/systemd_units
    if [ -d ${pyi_src}/opsiconfd ]; then
      cp -a ${pyi_src}/opsiconfd ${DST}/rootfs/usr/lib/
    fi;
    if [ -d ${pyi_src}/opsiconfd-amd64 ]; then
      mkdir -p ${DST}/rootfs-amd64/usr/lib
      cp -a ${pyi_src}/opsiconfd-amd64 ${DST}/rootfs-amd64/usr/lib/opsiconfd
    fi;
    if [ -d ${pyi_src}/opsiconfd-arm64 ]; then
      mkdir -p ${DST}/rootfs-arm64/usr/lib
      cp -a ${pyi_src}/opsiconfd-arm64 ${DST}/rootfs-arm64/usr/lib/opsiconfd
    fi;
    echo "#!/bin/sh"                 > ${DST}/rootfs/usr/bin/opsiconfd
    echo "cd /usr/lib/opsiconfd"    >> ${DST}/rootfs/usr/bin/opsiconfd
    echo "exec ./opsiconfd \"\$@\"" >> ${DST}/rootfs/usr/bin/opsiconfd
    chmod 755 ${DST}/rootfs/usr/bin/opsiconfd
    cp -a ${SRC}/opsiconfd_data/static ${DST}/rootfs/usr/share/opsiconfd/
    cp -a ${SRC}/opsiconfd_data/etc/* ${DST}/rootfs/etc/opsi/
    cp -a ${SRC}/opsiconfd_data/opsiconfd.service ${DST}/systemd_units/


  postinst_script: |
    dist=$(grep PRETTY_NAME /etc/os-release | cut -d'"' -f2)

    # Distribution specific workarounds
    if [[ "$dist" =~ "Red Hat Enterprise Linux 8" ]] || [[ "$dist" =~ "CentOS Linux 8" ]] || [[ "$dist" =~ "AlmaLinux 8" ]] || [[ "$dist" =~ "Rocky Linux 8" ]] || [[ "$dist" =~ "Oracle Linux Server 8" ]]; then
      # PAM unable to dlopen(/usr/lib64/security/pam_unix.so): /usr/lib/opsiconfd/libcrypto.so.1.1: version `OPENSSL_1_1_1b' not found (required by /lib64/libk5crypto.so.3)
      cp /usr/lib64/libcrypto.so.1.1 /usr/lib/opsiconfd/libcrypto.so.1.1
    elif [[ "$dist" =~ "SUSE Linux Enterprise Server 15 SP1" ]]; then
      # opsiconfd setup: /bin/sh: /usr/lib/opsiconfd/libreadline.so.7: no version information available (required by /bin/sh)
      cp /lib64/libreadline.so.7 /usr/lib/opsiconfd/libreadline.so.7
    elif [[ "$dist" =~ "SUSE Linux Enterprise Server 15 SP2" ]]; then
      # /usr/lib/opsiconfd/libssl.so.1.1: symbol EVP_idea_cbc, version OPENSSL_1_1_0 not defined in file libcrypto.so.1.1
      cp /usr/lib64/libssl.so.1.1 /usr/lib/opsiconfd/libssl.so.1.1
    fi

    # Use pam_unix.so from system
    # Authentication failure (auth_type=auth-module)...
    # ARM64: ubuntu: /usr/lib/aarch64-linux-gnu, debian: /lib/aarch64-linux-gnu
    for libdir in /usr/lib/x86_64-linux-gnu /lib/x86_64-linux-gnu /lib64  /usr/lib/aarch64-linux-gnu /lib/aarch64-linux-gnu; do
      [ -e ${libdir}/libpam.so.0 ] && cp ${libdir}/libpam.so.0 /usr/lib/opsiconfd/libpam.so.0
    done

    # Remove obsolete files
    [ -e /etc/logrotate.d/opsiconfd ] && rm /etc/logrotate.d/opsiconfd || true
    rm /etc/rc*/*opsiconfd 2>/dev/null || true
    [ -e /etc/init.d/opsiconfd ] && rm /etc/init.d/opsiconfd
    [ -e /etc/opsi/systemdTemplates ] && rm -r /etc/opsi/systemdTemplates
    [ -e /etc/systemd/system/opsiconfd.service.simple ] && rm /etc/systemd/system/opsiconfd.service.simple
    [ -e /etc/systemd/system/opsiconfd.service ] && rm /etc/systemd/system/opsiconfd.service
    systemctl daemon-reload || true

    [ -e /var/lib/opsi ] || mkdir -p /var/lib/opsi
    [ -e /etc/dhcpd.conf ] && sed -i s'#"dhcpdConfigFile".*#"dhcpdConfigFile":         "/etc/dhcpd.conf",#' /etc/opsi/backends/dhcpd.conf
    [ -e /etc/dhcpd.conf ] && sed -i s'#linux/pxelinux.0#opsi/pxelinux.0#' /etc/opsi/backends/dhcpd.conf
    [ -e /var/lib/opsi/server_commands_custom.conf ] || touch /var/lib/opsi/server_commands_custom.conf

    # Removing files dating before opsi 4.1
    [ -e /etc/opsi/version ] && rm /etc/opsi/version
    # Removing extension files from opsi < 4.3
    for ext in 10_opsi.conf 10_wim.conf 20_easy.conf 20_legacy.conf 30_kiosk.conf 30_sshcommands.conf 40_admin_tasks.conf 40_groupActions.conf 45_deprecated.conf 70_dynamic_depot.conf 70_wan.conf; do
      extf="/etc/opsi/backendManager/extend.d/${ext}"
      if [ -e "${extf}" ]; then
        echo "Moving extension file ${extf} to /etc/opsi/backendManager/extend.d.old"
        if [ ! -e /etc/opsi/backendManager/extend.d.old ]; then
          mkdir -p /etc/opsi/backendManager/extend.d.old
          chown :opsiadmin /etc/opsi/backendManager/extend.d.old || true
          chmod 770 /etc/opsi/backendManager/extend.d.old
        fi
        mv "${extf}" /etc/opsi/backendManager/extend.d.old
      fi
    done

    # Setup opsiconfd
    grep "run-as-user" /etc/opsi/opsiconfd.conf >/dev/null || echo -e "run-as-user = opsiconfd" >> /etc/opsi/opsiconfd.conf
    /usr/bin/opsiconfd setup --non-interactive --log-level-stderr=0 --log-level-file=0 || true
