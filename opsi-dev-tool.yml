pyinstaller-poetry:
  one_file: no
  hidden_imports:
    all:
      - ipaddress
      - colorsys
      - gunicorn.glogging
      - uvicorn.workers
      - uvicorn.loops
      - uvicorn.loops.auto
      - uvicorn.loops.uvloop
      - uvicorn.lifespan
      - uvicorn.lifespan.on
      - uvicorn.protocols
      - uvicorn.protocols.http
      - uvicorn.protocols.http.h11_impl
      - uvicorn.protocols.http.httptools_impl
      - uvicorn.protocols.websockets
      - uvicorn.protocols.websockets.auto
      - pydantic.color
      - pydantic.validators
      - pydantic.datetime_parse
        #- pkg_resources.py2_warn
      - OPSI.Backend.Depotserver
      - OPSI.Backend.DHCPD
      - OPSI.Backend.File
      - OPSI.Backend.HostControl
      - OPSI.Backend.HostControlSafe
      - OPSI.Backend.JSONRPC
      - OPSI.Backend.MySQL
      - OPSI.Backend.OpsiPXEConfd
      - OPSI.Backend.Replicator
      - OPSI.Backend.SQLite
      - OPSI.Util.WIM
  before_script: |
    find .venv -iname "*linux-gnu.so" | grep pydantic | xargs rm -v 2>/dev/null || true
  scripts:
    - script: run-opsiconfd
      binaries:
        - opsiconfd
  data_files:
    - src: opsiconfd_data/**/*
      dst: opsiconfd_data
  dirname: opsiconfd
  after_script: |
    mv dist/opsiconfd/site-packages/wsgidav dist/opsiconfd/wsgidav
    find dist/opsiconfd -iname "*.c" -delete
    find dist/opsiconfd -iname "*.h" -delete
    find dist/opsiconfd -iname "*.so" -exec chmod -x "{}" \;
    find dist/opsiconfd -iname "*.so.*" -exec chmod -x "{}" \;
    rm -r dist/opsiconfd/site-packages/Crypto/SelfTest

package:
  name: opsiconfd
  type: binary
  architecture: amd64
  systemd: yes
  depends:
    - librsync | librsync2 | librsync1
  source_script: |
    pyi_src="${SRC}"
    if [ -e "${SRC}/dist/opsiconfd/opsiconfd" ]; then pyi_src="${SRC}/dist"; fi
    mkdir -p ${DST}/rootfs/etc/opsi
    mkdir -p ${DST}/rootfs/usr/bin
    mkdir -p ${DST}/rootfs/usr/lib
    mkdir -p ${DST}/rootfs/usr/share/opsiconfd
    mkdir -p ${DST}/rootfs/var/log/opsi/opsiconfd
    mkdir -p ${DST}/systemd_units
    cp -a ${pyi_src}/opsiconfd ${DST}/rootfs/usr/lib/
    echo "#!/bin/sh"                 > ${DST}/rootfs/usr/bin/opsiconfd
    echo "cd /usr/lib/opsiconfd"    >> ${DST}/rootfs/usr/bin/opsiconfd
    echo "exec ./opsiconfd \"\$@\"" >> ${DST}/rootfs/usr/bin/opsiconfd
    chmod 755 ${DST}/rootfs/usr/bin/opsiconfd
    mv ${DST}/rootfs/usr/lib/opsiconfd/opsiconfd_data/static ${DST}/rootfs/usr/share/opsiconfd/
    mv ${DST}/rootfs/usr/lib/opsiconfd/opsiconfd_data/opsiconfd.conf ${DST}/rootfs/etc/opsi/
    mv ${DST}/rootfs/usr/lib/opsiconfd/opsiconfd_data/opsiconfd.service ${DST}/systemd_units/
    rm -r ${DST}/rootfs/usr/lib/opsiconfd/opsiconfd_data
  postinst_script: |
    # workaround for error on openSUSE Leap 15.2:
    #  /bin/sh: /usr/lib/opsiconfd/libreadline.so.7: no version information available (required by /bin/sh)
    [ -e /usr/lib/opsiconfd/libreadline.so.7 -a -e /lib64/libreadline.so.7 ] && cp /lib64/libreadline.so.7 /usr/lib/opsiconfd/libreadline.so.7
    # remove obsolete files
    [ -e /etc/logrotate.d/opsiconfd ] && rm /etc/logrotate.d/opsiconfd || true
    rm /etc/rc*/*opsiconfd 2>/dev/null || true
    [ -e /etc/init.d/opsiconfd ] && rm /etc/init.d/opsiconfd
    [ -e /etc/opsi/systemdTemplates ] && rm -r /etc/opsi/systemdTemplates
    [ -e /etc/systemd/system/opsiconfd.service.simple ] && rm /etc/systemd/system/opsiconfd.service.simple
    [ -e /etc/systemd/system/opsiconfd.service ] && rm /etc/systemd/system/opsiconfd.service
    systemctl daemon-reload
    # setup opsiconfd
    /usr/bin/opsiconfd setup --log-level-stderr=5 --log-level-file=0 --run-as-user=opsiconfd || true
    grep "run-as-user" /etc/opsi/opsiconfd.conf >/dev/null || echo "run-as-user = opsiconfd" >> /etc/opsi/opsiconfd.conf

